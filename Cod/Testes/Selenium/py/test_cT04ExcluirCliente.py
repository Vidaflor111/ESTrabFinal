# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCT04ExcluirCliente():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_cT04ExcluirCliente(self):
    self.driver.get("http://localhost/html/view/ExcluirCliente.html")
    self.driver.set_window_size(1936, 1066)
    assert self.driver.find_element(By.ID, "titulo").text == "Excluir Cliente"
    elements = self.driver.find_elements(By.NAME, "ccpf")
    assert len(elements) > 0
    assert self.driver.find_element(By.CSS_SELECTOR, ".campo").text == "CPF\\\\n\\\\n\\\\nVoltar"
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".botao")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".botaoB")
    assert len(elements) > 0
    self.driver.find_element(By.NAME, "ccpf").click()
    self.driver.find_element(By.NAME, "ccpf").send_keys("1111")
    self.driver.find_element(By.CSS_SELECTOR, ".botao").click()
    assert self.driver.find_element(By.ID, "titulo").text == "Confirme o cliente que vocÃª quer excluir"
    assert self.driver.find_element(By.CSS_SELECTOR, ".campo").text == "CPF\\\\n\\\\n\\\\nNome\\\\n\\\\nEmail\\\\n\\\\nSenha"
    assert self.driver.find_element(By.CSS_SELECTOR, ".campo").text == "CPF\\\\n\\\\n\\\\nNome\\\\n\\\\nEmail\\\\n\\\\nSenha"
    assert self.driver.find_element(By.CSS_SELECTOR, ".campo").text == "CPF\\\\n\\\\n\\\\nNome\\\\n\\\\nEmail\\\\n\\\\nSenha"
    assert self.driver.find_element(By.CSS_SELECTOR, ".campo").text == "CPF\\\\n\\\\n\\\\nNome\\\\n\\\\nEmail\\\\n\\\\nSenha"
    elements = self.driver.find_elements(By.NAME, "ccpf")
    assert len(elements) > 0
    self.driver.find_element(By.NAME, "cnome").click()
    elements = self.driver.find_elements(By.NAME, "cnome")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.NAME, "cemail")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.NAME, "csenha")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".botao")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".botaoB")
    assert len(elements) > 0
    self.driver.find_element(By.CSS_SELECTOR, ".botao").click()
  
